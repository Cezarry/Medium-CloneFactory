/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Factory,
  FactoryInterface,
} from "../../FactoryByClone.sol/Factory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_baseExampleContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "baseExampleContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cloneContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contracts",
    outputs: [
      {
        internalType: "contract ExampleContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContracts",
    outputs: [
      {
        internalType: "contract ExampleContract[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610620380380610620833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610509806101176000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630ef5457914610051578063474da79a1461006f578063c3a2a93a1461009f578063e3fcee39146100bd575b600080fd5b6100596100c7565b60405161006691906102f6565b60405180910390f35b6100896004803603810190610084919061034c565b6100eb565b60405161009691906103d8565b60405180910390f35b6100a761012a565b6040516100b491906104b1565b60405180910390f35b6100c56101b8565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106100fb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060018054806020026020016040519081016040528092919081815260200182805480156101ae57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610164575b5050505050905090565b60006101e360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661024b565b90506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f092505050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102e0826102b5565b9050919050565b6102f0816102d5565b82525050565b600060208201905061030b60008301846102e7565b92915050565b600080fd5b6000819050919050565b61032981610316565b811461033457600080fd5b50565b60008135905061034681610320565b92915050565b60006020828403121561036257610361610311565b5b600061037084828501610337565b91505092915050565b6000819050919050565b600061039e610399610394846102b5565b610379565b6102b5565b9050919050565b60006103b082610383565b9050919050565b60006103c2826103a5565b9050919050565b6103d2816103b7565b82525050565b60006020820190506103ed60008301846103c9565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610428816103b7565b82525050565b600061043a838361041f565b60208301905092915050565b6000602082019050919050565b600061045e826103f3565b61046881856103fe565b93506104738361040f565b8060005b838110156104a457815161048b888261042e565b975061049683610446565b925050600181019050610477565b5085935050505092915050565b600060208201905081810360008301526104cb8184610453565b90509291505056fea26469706673582212201d0fa938cf66a1b3c1c71cd14504e266e76ca6f84a6e3fbe9b82d5b674855fcb64736f6c63430008110033";

type FactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Factory__factory extends ContractFactory {
  constructor(...args: FactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseExampleContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Factory> {
    return super.deploy(
      _baseExampleContract,
      overrides || {}
    ) as Promise<Factory>;
  }
  override getDeployTransaction(
    _baseExampleContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseExampleContract, overrides || {});
  }
  override attach(address: string): Factory {
    return super.attach(address) as Factory;
  }
  override connect(signer: Signer): Factory__factory {
    return super.connect(signer) as Factory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FactoryInterface {
    return new utils.Interface(_abi) as FactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Factory {
    return new Contract(address, _abi, signerOrProvider) as Factory;
  }
}
