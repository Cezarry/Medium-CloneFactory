/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ExampleContract,
  ExampleContractInterface,
} from "../ExampleContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "constantNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "immutableNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "num1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "num2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "num3",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "num4",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "num5",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "number",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "setNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "someFunction1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "someFunction2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "someFunction3",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "someFunction4",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "someFunction5",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testString1",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testString2",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testString3",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testString4",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testString5",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052608060005534801561001557600080fd5b506002608081815250506080516107b961003a60003960006103d001526107b96000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80637c75023a116100ad578063a531f36a11610071578063a531f36a146102a1578063a8319031146102bf578063acddbe1c146102c9578063d02992e5146102d3578063d9cf2b6c146102f15761012c565b80637c75023a146102475780638381f58a1461026557806385439f82146102835780639eb32fdb1461028d5780639ef45a31146102975761012c565b8063453e76cf116100f4578063453e76cf146101c55780634e54bc13146101e35780635ea5445a14610201578063697433121461021f5780636a79377f1461023d5761012c565b80630909ce681461013157806315d4266c1461014f5780632e2c783e1461016d5780633b9eac4b1461018b5780633fb5c1cb146101a9575b600080fd5b61013961030f565b6040516101469190610624565b60405180910390f35b610157610348565b604051610164919061065f565b60405180910390f35b61017561034d565b6040516101829190610624565b60405180910390f35b610193610386565b6040516101a0919061065f565b60405180910390f35b6101c360048036038101906101be91906106ab565b61038b565b005b6101cd610395565b6040516101da9190610624565b60405180910390f35b6101eb6103ce565b6040516101f8919061065f565b60405180910390f35b6102096103f2565b6040516102169190610624565b60405180910390f35b61022761042b565b604051610234919061065f565b60405180910390f35b610245610430565b005b61024f610465565b60405161025c919061065f565b60405180910390f35b61026d61046a565b60405161027a919061065f565b60405180910390f35b61028b610470565b005b6102956104a6565b005b61029f6104b0565b005b6102a96104e5565b6040516102b6919061065f565b60405180910390f35b6102c76104ea565b005b6102d1610520565b005b6102db610556565b6040516102e8919061065f565b60405180910390f35b6102f961055b565b6040516103069190610624565b60405180910390f35b6040518060400160405280601781526020017f4a75737420736f6d65207465737420737472696e67203200000000000000000081525081565b601481565b6040518060400160405280601781526020017f4a75737420736f6d65207465737420737472696e67203100000000000000000081525081565b600a81565b8060008190555050565b6040518060400160405280601781526020017f4a75737420736f6d65207465737420737472696e67203500000000000000000081525081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040518060400160405280601781526020017f4a75737420736f6d65207465737420737472696e67203300000000000000000081525081565b603281565b60005b6064811015610462576001816104499190610707565b600081905550808061045a9061073b565b915050610433565b50565b602881565b60005481565b60005b6101908110156104a35760048161048a9190610707565b600081905550808061049b9061073b565b915050610473565b50565b6080600081905550565b60005b60c88110156104e2576002816104c99190610707565b60008190555080806104da9061073b565b9150506104b3565b50565b601e81565b60005b6101f481101561051d576005816105049190610707565b60008190555080806105159061073b565b9150506104ed565b50565b60005b61012c8110156105535760038161053a9190610707565b600081905550808061054b9061073b565b915050610523565b50565b600181565b6040518060400160405280601781526020017f4a75737420736f6d65207465737420737472696e67203400000000000000000081525081565b600081519050919050565b600082825260208201905092915050565b60005b838110156105ce5780820151818401526020810190506105b3565b60008484015250505050565b6000601f19601f8301169050919050565b60006105f682610594565b610600818561059f565b93506106108185602086016105b0565b610619816105da565b840191505092915050565b6000602082019050818103600083015261063e81846105eb565b905092915050565b6000819050919050565b61065981610646565b82525050565b60006020820190506106746000830184610650565b92915050565b600080fd5b61068881610646565b811461069357600080fd5b50565b6000813590506106a58161067f565b92915050565b6000602082840312156106c1576106c061067a565b5b60006106cf84828501610696565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061071282610646565b915061071d83610646565b9250828201905080821115610735576107346106d8565b5b92915050565b600061074682610646565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610778576107776106d8565b5b60018201905091905056fea2646970667358221220c833d59409eeef53694034c9019f8e017bf56f84eeb442883b6fbe90071958fa64736f6c63430008110033";

type ExampleContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleContract__factory extends ContractFactory {
  constructor(...args: ExampleContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExampleContract> {
    return super.deploy(overrides || {}) as Promise<ExampleContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExampleContract {
    return super.attach(address) as ExampleContract;
  }
  override connect(signer: Signer): ExampleContract__factory {
    return super.connect(signer) as ExampleContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleContractInterface {
    return new utils.Interface(_abi) as ExampleContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleContract {
    return new Contract(address, _abi, signerOrProvider) as ExampleContract;
  }
}
